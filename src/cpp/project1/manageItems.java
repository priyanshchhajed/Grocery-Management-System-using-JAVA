/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cpp.project1;

import java.awt.Color;
import java.awt.Font;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Priyansh
 */
public class manageItems extends javax.swing.JInternalFrame {

    /**
     * Creates new form itemdetails
     */
    Connection Con= null;
    Statement St= null;
    ResultSet Rs=null;
    public void SelectItem(){
        try{
            Con=DriverManager.getConnection("jdbc:derby://localhost:1527/grocerystoredb","User1","1234");
            St=Con.createStatement();
            Rs=St.executeQuery("Select * from User1.MANAGEITEMTTB");
            ItemTable.setModel(DbUtils.resultSetToTableModel(Rs));
            theader();
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    public void GetCat(){
        try{
            Con=DriverManager.getConnection("jdbc:derby://localhost:1527/grocerystoredb","User1","1234");
            St=Con.createStatement();
            String query="Select * from User1.MANAGECATEGORYTB";
            Rs=St.executeQuery(query);
            while(Rs.next()){
                String MyCat=Rs.getString("CATEGORY_NAME");
                ItemCategory.addItem(MyCat);
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }

    }
    public manageItems() {
        initComponents();
        SelectItem();
        GetCat();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        ItemCode = new javax.swing.JTextField();
        ItemName = new javax.swing.JTextField();
        ItemQuantity = new javax.swing.JTextField();
        ItemCategory = new javax.swing.JComboBox<>();
        Add = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        SellingPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ItemDescription = new javax.swing.JTextArea();
        ItemRec = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        ItemSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ItemTable = new javax.swing.JTable();

        setVisible(true);

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));
        jPanel9.setPreferredSize(new java.awt.Dimension(1187, 717));

        jLabel5.setBackground(new java.awt.Color(0, 0, 102));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cpp/project1/icons/icons8_edit_product_52px.png"))); // NOI18N
        jLabel5.setText("MANAGE ITEMS ");
        jLabel5.setOpaque(true);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 1481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        ItemCode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ItemCode.setForeground(new java.awt.Color(153, 153, 153));
        ItemCode.setText("  Enter Item Code");
        ItemCode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        ItemCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ItemCodeFocusLost(evt);
            }
        });
        ItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemCodeActionPerformed(evt);
            }
        });

        ItemName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ItemName.setForeground(new java.awt.Color(153, 153, 153));
        ItemName.setText("  Enter Item Name");
        ItemName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        ItemName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ItemNameFocusLost(evt);
            }
        });

        ItemQuantity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ItemQuantity.setForeground(new java.awt.Color(153, 153, 153));
        ItemQuantity.setText("  Enter Quantity");
        ItemQuantity.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        ItemQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemQuantityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ItemQuantityFocusLost(evt);
            }
        });
        ItemQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemQuantityActionPerformed(evt);
            }
        });

        ItemCategory.setForeground(new java.awt.Color(153, 153, 153));
        ItemCategory.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        ItemCategory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemCategoryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ItemCategoryFocusLost(evt);
            }
        });
        ItemCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemCategoryActionPerformed(evt);
            }
        });

        Add.setBackground(new java.awt.Color(0, 0, 102));
        Add.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Add.setForeground(new java.awt.Color(255, 255, 255));
        Add.setText("ADD");
        Add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Update.setBackground(new java.awt.Color(0, 0, 102));
        Update.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setText("UPDATE");
        Update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(0, 0, 102));
        Delete.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setText("DELETE");
        Delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Clear.setBackground(new java.awt.Color(0, 0, 102));
        Clear.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 255, 255));
        Clear.setText("CLEAR");
        Clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        SellingPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SellingPrice.setForeground(new java.awt.Color(153, 153, 153));
        SellingPrice.setText("  Enter Selling Price");
        SellingPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        SellingPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SellingPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SellingPriceFocusLost(evt);
            }
        });
        SellingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellingPriceActionPerformed(evt);
            }
        });

        ItemDescription.setColumns(20);
        ItemDescription.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ItemDescription.setForeground(new java.awt.Color(153, 153, 153));
        ItemDescription.setRows(5);
        ItemDescription.setText("  Enter Description");
        ItemDescription.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        ItemDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemDescriptionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ItemDescriptionFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(ItemDescription);

        ItemRec.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ItemRec.setForeground(new java.awt.Color(153, 153, 153));
        ItemRec.setText("  Enter Item to Recommend");
        ItemRec.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        ItemRec.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemRecFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ItemRecFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Clear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ItemCategory, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SellingPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ItemQuantity, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(ItemName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ItemCode)
                            .addComponent(ItemRec, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(ItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ItemCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ItemQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ItemRec, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        ItemSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ItemSearch.setForeground(new java.awt.Color(153, 153, 153));
        ItemSearch.setText("  Search Item");
        ItemSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 102)));
        ItemSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ItemSearchFocusLost(evt);
            }
        });
        ItemSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemSearchActionPerformed(evt);
            }
        });
        ItemSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ItemSearchKeyReleased(evt);
            }
        });

        ItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Category", "Selling Price", "Quantity", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ItemTable.setRowHeight(35);
        ItemTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ItemTableFocusGained(evt);
            }
        });
        ItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ItemTable);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(ItemSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 613, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(ItemSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 1482, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemCodeActionPerformed

    private void ItemCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemCategoryActionPerformed
private void theader()
         {
             JTableHeader thead =ItemTable.getTableHeader();
             thead.setForeground(new Color(0,0,102));
             thead.setFont(new Font("Tahoma",Font.BOLD,14));
         }
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        if(ItemCode.getText().isEmpty()||ItemName.getText().isEmpty()||SellingPrice.getText().isEmpty()||ItemQuantity.getText().isEmpty()||ItemDescription.getText().isEmpty()||"  Enter Item Code".equals(ItemCode.getText())||"  Enter Item Name".equals(ItemName.getText())||"  Enter Selling Price".equals(SellingPrice.getText())||"  Enter Quantity".equals(ItemQuantity.getText())||"  Enter Description".equals(ItemDescription.getText()))

      {
           JOptionPane.showMessageDialog(this, "Missing Information");
      }
      else{
          try {
        Con = DriverManager.getConnection("jdbc:derby://localhost:1527/grocerystoredb","User1","1234");
        PreparedStatement add = Con.prepareStatement("insert into MANAGEITEMTTB values (?,?,?,?,?,?,?)");
        add.setString(1,ItemCode.getText());// TODO add your handling code here:
        add.setString(2,ItemName.getText());
        add.setString(3,ItemCategory.getSelectedItem().toString());
        add.setDouble(4,Double.valueOf(SellingPrice.getText()));
        add.setInt(5,Integer.valueOf(ItemQuantity.getText()));
        add.setString(6,ItemDescription.getText());
        if("  Enter Item to Recommend".equals(ItemRec.getText())){
            add.setString(7," ");
        }
        else{
            add.setString(7,ItemRec.getText());
        }
        int row;
        row = add.executeUpdate();
        JOptionPane.showMessageDialog(this, "Item Added Successfully");
        Con.close();
        SelectItem();
      }
      catch (Exception e){
        e.printStackTrace();
        }
    }//GEN-LAST:event_AddActionPerformed
   }
    private void SellingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellingPriceActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_SellingPriceActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        ItemCode.setText("  Enter Item Code");
        ItemCode.setForeground(new Color(153,153,153));
        ItemName.setText("  Enter Item Name");
        ItemName.setForeground(new Color(153,153,153));
        SellingPrice.setText("  Enter Selling Price");
        SellingPrice.setForeground(new Color(153,153,153));
        ItemDescription.setText("  Enter Description");
        ItemDescription.setForeground(new Color(153,153,153));
        ItemQuantity.setText("  Enter Quantity");
        ItemQuantity.setForeground(new Color(153,153,153));
        ItemRec.setText("   Enter Item to Recommend");
        ItemRec.setForeground(new Color(153,153,153));
    }//GEN-LAST:event_ClearActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        if(ItemCode.getText().isEmpty()||ItemName.getText().isEmpty()||SellingPrice.getText().isEmpty()||ItemQuantity.getText().isEmpty()||ItemDescription.getText().isEmpty()||"  Enter Item Code".equals(ItemCode.getText())||"  Enter Item Name".equals(ItemName.getText())||"  Enter Selling Price".equals(SellingPrice.getText())||"  Enter Quantity".equals(ItemQuantity.getText())||"  Enter Description".equals(ItemDescription.getText()))
    {
        JOptionPane.showMessageDialog(this, "Missing Information");
    }
    else{
        try {
            Con = DriverManager.getConnection("jdbc:derby://localhost:1527/grocerystoredb","User1","1234");
            String Query ="Update User1.MANAGEITEMTTB set ITEM_NAME='"+ItemName.getText()+"'"+",ITEM_CATEGORY='"+ItemCategory.getSelectedItem().toString()+"'"+",SELLING_PRICE="+SellingPrice.getText()+",QUANTITY="+ItemQuantity.getText()+",DESCRIPTION='"+ItemDescription.getText()+"'"+",RECOMMENDATION='"+ItemRec.getText()+"'"+"where ITEM_CODE='"+ItemCode.getText()+"'";
            String Query2="Update User1.MANAGEITEMTTB set ITEM_NAME='"+ItemName.getText()+"'"+",ITEM_CATEGORY='"+ItemCategory.getSelectedItem().toString()+"'"+",SELLING_PRICE="+SellingPrice.getText()+",QUANTITY="+ItemQuantity.getText()+",DESCRIPTION='"+ItemDescription.getText()+"'"+",RECOMMENDATION='"+" "+"'"+"where ITEM_CODE='"+ItemCode.getText()+"'";
            Statement Add=Con.createStatement();
            if("  Enter Item to Recommend".equals(ItemRec.getText())){
                Add.executeUpdate(Query2);
            }
            else{
                Add.executeUpdate(Query);
            }
            SelectItem();
            JOptionPane.showMessageDialog(this, "Item Updated Successfully");
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        if(ItemCode.getText().isEmpty()||"  Enter Item Code".equals(ItemCode.getText()))
      {
           JOptionPane.showMessageDialog(this, "Enter the Item Code to Delete the Item");
      }
      else{
          try{
               Con = DriverManager.getConnection("jdbc:derby://localhost:1527/grocerystoredb","User1","1234");
               String ICD=ItemCode.getText();
               String Query="Delete from User1.MANAGEITEMTTB where ITEM_CODE='"+ICD+"'";
               Statement Add=Con.createStatement();
               Add.executeUpdate(Query);
               SelectItem();
               JOptionPane.showMessageDialog(this, "Item Deleted Successfully");
          }catch(Exception e)
          {
              e.printStackTrace();
          }
      }
    }//GEN-LAST:event_DeleteActionPerformed

    private void ItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemTableMouseClicked
        DefaultTableModel Model=(DefaultTableModel) ItemTable.getModel();
        int Myindex = ItemTable.getSelectedRow();
        ItemCode.setText(Model.getValueAt(Myindex,0).toString());
        ItemCode.setForeground(new Color(0,0,0));
        ItemName.setText(Model.getValueAt(Myindex,1).toString());
        ItemName.setForeground(new Color(0,0,0));
        SellingPrice.setText(Model.getValueAt(Myindex,3).toString());
        SellingPrice.setForeground(new Color(0,0,0));
        ItemQuantity.setText(Model.getValueAt(Myindex,4).toString());
        ItemQuantity.setForeground(new Color(0,0,0));
        ItemDescription.setText(Model.getValueAt(Myindex,5).toString());
        ItemDescription.setForeground(new Color(0,0,0));
        if(" ".equals(Model.getValueAt(Myindex,6))){
            ItemRec.setText("  Enter Item to Recommend");
            ItemRec.setForeground(new Color(153,153,153));
        }
        else{
            ItemRec.setText(Model.getValueAt(Myindex,6).toString());
            ItemRec.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ItemTableMouseClicked

    private void ItemCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemCodeFocusGained
         if(ItemCode.getText().equals("  Enter Item Code"))
        {
            ItemCode.setText("");
            ItemCode.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ItemCodeFocusGained

    private void ItemCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemCodeFocusLost
       if(ItemCode.getText().equals(""))
        {
            ItemCode.setText("  Enter Item Code");
            ItemCode.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_ItemCodeFocusLost

    private void ItemNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemNameFocusGained
       if(ItemName.getText().equals("  Enter Item Name"))
        {
            ItemName.setText("");
            ItemName.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ItemNameFocusGained

    private void ItemNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemNameFocusLost
       if(ItemName.getText().equals(""))
        {
            ItemName.setText("  Enter Item Name");
            ItemName.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_ItemNameFocusLost

    private void SellingPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SellingPriceFocusGained
       if(SellingPrice.getText().equals("  Enter Selling Price"))
        {
            SellingPrice.setText("");
            SellingPrice.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_SellingPriceFocusGained

    private void SellingPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SellingPriceFocusLost
         if(SellingPrice.getText().equals(""))
        {
            SellingPrice.setText("  Enter Selling Price");
            SellingPrice.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_SellingPriceFocusLost

    private void ItemQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemQuantityFocusGained
        if(ItemQuantity.getText().equals("  Enter Quantity"))
        {
            ItemQuantity.setText("");
            ItemQuantity.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ItemQuantityFocusGained

    private void ItemQuantityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemQuantityFocusLost
        if(ItemQuantity.getText().equals(""))
        {
            ItemQuantity.setText("  Enter Quantity");
            ItemQuantity.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_ItemQuantityFocusLost

    private void ItemDescriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemDescriptionFocusGained
         if(ItemDescription.getText().equals("  Enter Description"))
        {
            ItemDescription.setText("");
            ItemDescription.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ItemDescriptionFocusGained

    private void ItemDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemDescriptionFocusLost
        if(ItemDescription.getText().equals(""))
        {
             ItemDescription.setText("  Enter Description");
             ItemDescription.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_ItemDescriptionFocusLost

    private void ItemCategoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemCategoryFocusGained

    }//GEN-LAST:event_ItemCategoryFocusGained

    private void ItemCategoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemCategoryFocusLost
         if(ItemDescription.getText().equals(""))
        {
             ItemDescription.setText("  Beverages");
             ItemDescription.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_ItemCategoryFocusLost

    private void ItemSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemSearchFocusGained
        if(ItemSearch.getText().equals("  Search Item"))
        {
            ItemSearch.setText("");
            ItemSearch.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ItemSearchFocusGained

    private void ItemSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemSearchFocusLost
        if(ItemSearch.getText().equals(""))
        {
             ItemSearch.setText("  Search Item");
             ItemSearch.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_ItemSearchFocusLost

    private void ItemSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemSearchActionPerformed

    private void ItemSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ItemSearchKeyReleased
        DefaultTableModel Model=(DefaultTableModel) ItemTable.getModel();
        String search = ItemSearch.getText();
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter <DefaultTableModel>(Model);
        ItemTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_ItemSearchKeyReleased

    private void ItemTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemTableFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemTableFocusGained

    private void ItemQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemQuantityActionPerformed

    private void ItemRecFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemRecFocusGained
        if(ItemRec.getText().equals("  Enter Item to Recommend"))
        {
            ItemRec.setText("");
            ItemRec.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_ItemRecFocusGained

    private void ItemRecFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ItemRecFocusLost
        if(ItemRec.getText().equals(""))
        {
             ItemRec.setText("  Enter Item to Recommend");
             ItemRec.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_ItemRecFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JComboBox<String> ItemCategory;
    private javax.swing.JTextField ItemCode;
    private javax.swing.JTextArea ItemDescription;
    private javax.swing.JTextField ItemName;
    private javax.swing.JTextField ItemQuantity;
    private javax.swing.JTextField ItemRec;
    private javax.swing.JTextField ItemSearch;
    private javax.swing.JTable ItemTable;
    private javax.swing.JTextField SellingPrice;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
